#!/usr/bin/env python
PACKAGE = "stereo_depth"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("block_size", int_t, 0,
    "Matched block size",
    11, 1,  100)

gen.add("p1", int_t,  0,
    "The first parameter controlling the disparity smoothness",
    8,  1,  32)

gen.add("p2", int_t,  0,
    "The second parameter controlling the disparity smoothness. The larger the values are, the smoother the disparity is.",
    32, 1, 64)

gen.add("speckle_range", int_t,  0,
    "Maximum disparity variation within each connected component. Implicitly multiplied by 16",
    1, 0, 4)

gen.add("speckle_window_size", int_t,   0,
    "Maximum size of smooth disparity regions to consider their noise speckles and invalidate",
    100, 0, 200)

gen.add("uniqueness_ratio", int_t,  0,
    "Margin in percentage by which the best (minimum) computed cost function value should 'win' the second best value to consider the found match correct",
    15, 0, 50)

gen.add("min_disparity", int_t,  0,
    "Minimum possible disparity value",
    1, 0, 32)

gen.add("num_disparities", int_t,  0,
    "[Multiplied by 16] Maximum disparity minus minimum disparity.",
    4, 1, 20)

gen.add("disp12_max_diff", int_t,  0,
    "Maximum allowed difference (in integer pixel units) in the left-right disparity check",
    0, -1, 100)

gen.add("pre_filter_cap", int_t,  0,
    "Truncation value for the prefiltered image pixels. The algorithm first computes x-derivative at each pixel and clips its value by [-preFilterCap, preFilterCap] interval.",
    50, -1, 255)

mode_enum = gen.enum([ gen.const("MODE_SGBM",       int_t, 0, "A small constant"),
                       gen.const("MODE_HH",         int_t, 1, "A medium constant"),
                       gen.const("MODE_SGBM_3WAY",  int_t, 2, "A large constant"),
                       gen.const("MODE_HH4",        int_t, 3, "An extra large constant")], "An enum to set SGBM mode")

gen.add("mode", int_t,  0, "Set matching mode", 1, 0, 3, edit_method=mode_enum)

exit(gen.generate(PACKAGE, "stereo_depth", "Disparity"))